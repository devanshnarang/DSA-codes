//types of pointers/*wild pointer-a pointer where user declares the pointer but not initialises it.dueto it ends up pointing to some random memory location.due tothis we might get some undefined behaviour&crashes.we may also get segmentation fault(memory related issues)Null pointer-if we wanna have a pointer variable which is just declared but will get address later to storedeclaration- eg-int *ptr=NULL; or int *ptr="\0";0 is mostly a special reserved memory address in many OS.Runtime error might occur while dereferencing null pointer.Dangling pointer-It is a type of pointer that points to a memory location that is not valid.eg int main(){    int* ptr=NULL;    {        int x=10;        ptr=&x;    }    cout<<ptr;}VOID pointer-these are special pointers that can point to any data type value.they can't be dereferenced as they have no fixed value.thus we can type cast it to other type of pointereg-*/#include<iostream>using namespace std;int main(){    float f=10.2;    int x=10;    void* ptr=&f;    ptr=&x;    int *integerpointer=(int *)ptr;//type casting    return 0;}